{
  "title": "React",
  "duration": 1,
  "price": 1100,
  "description": "A complete introduction to Facebook's React view rendering library. Learn the concepts of one-way binding and the component tree, and get up and running the React way.",
  "outcome": "You will be able to build a front end, data backed, interactive application using React components, and you will understand how such an application should be wired together.",
  "exercises": {
    "intro": {
      "title": "React Theory and Architecture",
      "description": ""
    },
    "hello-world": {
      "title": "React Hello World",
      "description": ""
    },
    "nesting": {
      "title": "Nesting and repeating HTML",
      "description": "The DOM is a tree. In this section we compose trees manually, and dynamically.",

      "learnings": [
        "Nesting Strings, elements and arrays",
        "Generating a list from an array",
        "Using Keys for performance",
        "Array#map for array manipulation"
      ]
    },
    "elements": {
      "title": "Creating a React Element",
      "description": ""
    },
    "props": {
      "title": "Passing Data with Props",
      "description": "",
      "learnings": [
        "What is one-way binding?",
        "How do I pass data around a React app?",
        "What are props?"
      ]
    },
    "jsx": {
      "title": "Introducing JSX",
      "description": ""
    },
    "state": {
      "title": "Stateful Components",
      "description": "In which we learn how a component can maintain it's own state, and build a simple clock."
    },
    "events": {
      "title": "Handling Events (onClick) a counter",
      "description": ""
    },
    "state-immutability": {
      "title": "Immutable state and the immutability helpers",
      "description": "Immutable state makes for difficult JavaScript. React provides a Mongo like helper for updating state atomically."
    },
    "integration": {
      "title": "Integration Exercise - Todos",
      "description": ""
    },
    "ajax": {
      "title": "AJAX (with fetch and componentDidMount)",
      "description": ""
    },
    "children": {
      "title": "Children",
      "description": ""
    }
  }
}
