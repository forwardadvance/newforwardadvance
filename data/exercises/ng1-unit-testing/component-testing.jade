section
  :markdown
    Yo might use integration testing to check your components work, but it's pretty helpful to be able to unit test them too.

    We test a component, by creating an element then compiling it. We can then check to see if the component has the stuff in it that we expected to see.

    Here's a simple cat component:

    ```
    angular.module('app', [])
      .component('cat', {
        bindings: {
          miows: '@'
        },
        controllerAs: 'vm',
        template: `
          <h1>
            Cat miows
            {{ vm.miows }}
            times
          </h1>
        `
      });
    ```

    In order to test this, we need a DOM fragment that matches it:

    ```html
    <cat miows="11"></cat>
    ```

    Let's put that in context


    ```
    describe('Component: cat', function () {
      beforeEach(module('app'));

      var element;
      var scope;
      beforeEach(inject(function($rootScope, $compile){
        scope = $rootScope.$new();
        element = angular.element('<cat miows="11"></cat>');
        element = $compile(element)(scope);
        scope.$apply();
      }));

      it('should render the text', function() {
        var h1 = element.find('h1');
        expect(h1.text()).toBe('Cat miows 11 times');
      });

    });
    ```

    ## Exercise 1

    Create
