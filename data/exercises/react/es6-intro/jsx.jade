:markdown
  JSX is a JavaScript *transpiler* that extends JavaScript with additional features. JSX is JavaScript with XML, and it lets you embed XML templates right into your JavaScript.

  For example, instead of writing this:

  ```
  var cats = React.createElement(
    "p",
    null,
    "Cats"
  );
  ```

  We can write this:

  ```jsx
  const cats = <p>Cats</p>;
  ```

  ## Stateless Components

  A simple component now looks like this:

  ```
  const App = () =>
    <div className="app">
      <h1>My App</h1>
    </div>
  ```

  ## Embedding JavaScript

  To insert JavaScript into an XML section of a JSX file, we use the curly braces, like so:

  ```html
  <button onClick={props.saveEveryone}>Save The World</button>
  ```

  ## Loops

  Say we have a list of cats:

  ```
  const cats = [
    {id: 1, name: "Sherlock"},
    {id: 2, name: "Watson"}
  ]
  ```

  We can map them to DOM nodes like so:

  ```
  const Cats = (props) =>
    <ul>
      {
        props.cats.map((cat) =>
          <li id={cat.id}>
            {cat.name}
          </li>
        )
      }
    </ul>
  ```

  ## Props

  If we write a component like this, our props become simple attributes of the html:

  ```
  const App = () => {
    let cat = {name: "Fluffy"};
    return <Cat name={cat} />
  }
  ```

  We can then run this like this:

  ```
  ReactDOM.render(
    <App cat="miffy"></App>,
    document.getElementById('app')
  )
  ```


section.exercise
  :markdown
    ## Exercise
    Try out some JSX at the
    <a href="https://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact%2Cstage-2&targets=&browsers=&builtIns=false&debug=false&experimental=false&loose=false&spec=false&code=const%20element%20%3D%20%3Cp%3ECats%3C%2Fp%3E%3B)" target="_blank">
      Babel repl here.
    </a>
    Try to make an anchor with an h1 inside of it. Add an href attribute. Check what it compiles to. Try to add an onClick that calls a function.

section.exercise
  :markdown
    ## Further Exercise

    Try to make a JSX Hello World using a simple stateless component.

    For bonus points, add a button with an onClick.

    For hyperbonus points (yes, that's a thing), try to add an unordered list of catNames.

    Work in the Pen below.

    <p data-height="265" data-theme-id="dark" data-slug-hash="KqMojZ" data-default-tab="js,result" data-user="superluminary" data-embed-version="2" data-pen-title="React JSX Exercise" class="codepen">See the Pen <a href="https://codepen.io/superluminary/pen/KqMojZ/">React JSX Exercise</a> by Nicholas Johnson (<a href="https://codepen.io/superluminary">@superluminary</a>) on <a href="https://codepen.io">CodePen</a>.</p>
