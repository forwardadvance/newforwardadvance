section
  :markdown
    Angular 2 is built out of components. Up till now, our applications have consisted of a single component, but a real app will be made out of a tree of components, one inside the next.

    Because child components are injected into their parent, order of definition matters. We get around this using a module loader, more on this later, but for now we're going to continue putting everything in one file.

    ## A Cat Component

    Let's create a component that can sit on our page. I'm going to make a Cat Component to render out a single cat.

    Because we have no module loader, we must define the child component first in our source.

    ```
    var CatComponent = ng.core
      .Component({
        selector: 'cat',
        template: '<h1>Here is {{catName}} the cat!</h1>'
      })
      .Class({
        constructor: function() {
          var vm = this;
          vm.catName = "Fluffy"
        }
      });
    ```

    ## Now for the app component

    Next we define the parent component, which will be the root of the tree:

    ```
    var AppComponent = ng.core
      .Component({
        selector: 'app',
        template: '<cat>hello</cat>',
        directives: [CatComponent]
      })
      .Class({
        constructor: function() {}
      });
    ```

    Notice that we tell our AppComponent that it can contain CatComponents by giving it an array of directives.

    Finally we can bootstrap:

    ```
    document.addEventListener('DOMContentLoaded', function() {
      ng.platform.browser.bootstrap(AppComponent);
    });
    ```


section.exercise
  :markdown
    ## Exercise - A little web app

    We are going to create a small web page using components that will render information about a single user / product / cat.

    We won't be passing the cat into the component yet, we'll get to this in the next section.

    Use the examples above to create an app component that contains three child components:

    * A Feader
    * A Cat
    * A Footer

    You will need to create each component separately, and then pass them in to to app component in the directives array.

    Later we will look at passing data into our component and sending it back out again.




// # Further reading:

// * <http://blog.thoughtram.io/angular/2015/07/06/even-better-es5-code-for-angular-2.html>
